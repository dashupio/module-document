<page-document-view>
  <div>
    <editor if={ props.altering } ref={ ref('document') } class="editor-hidden" content={ props.page.get('data.document') } on-update={ (e) => onChange(e) } />
    <editor-render if={ !props.altering } ref={ ref('document') } class="editor-hidden" content={ props.page.get('data.document') } />
  </div>

  <script>

    export default class PageApplicationView {

      /**
       * get props
       */
      getProps() {
        // get props
        const props = { ...(this.props) };

        // delete unwanted
        delete props.view;
        delete props.type;
        delete props.struct;

        // return fixed
        return props;
      }

      /**
       * on color
       */
      onChange(e) {
        // set color
        this.props.data('document', this.refs.document.val());
      }


      // ////////////////////////////////////////////////////////////////////////////
      //
      // MISC METHODS
      //
      // ////////////////////////////////////////////////////////////////////////////

      /**
       * ref
       */
      ref(name) {
        // set refs
        if (!this.refs) this.refs = {};

        // return ref function
        return (that) => {
          // set ref
          this.refs[name] = that;
        };
      }
    }
  </script>

  <style>
    .ql-container.ql-bubble .ql-editor {
      color         : var(--body);
      border        : 0;
      padding       : 0;
      background    : transparent;
      border-radius : 0;
    }
  </style>
</page-document-view>